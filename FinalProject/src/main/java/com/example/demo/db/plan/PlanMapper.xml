<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="plan"> 
  <!-- 여행계획 목록 페이지 -->

	<select id="findAll" resultType="planVO">
        select * from(select rownum n, a.* from(select * from plan p where p.plan_hit >=0
        <if test="keyword != null and keyword != ''">
            and (plan_title like '%' || #{keyword} || '%' or (select distinct  k.code  from plan p, korea k 
            where p.korea_code = k.code 
			and k.region like '%' || #{keyword} || '%') = p.korea_code)
        </if>
        <if test="region != null and region != '' and region != 0">
            AND p.korea_code = #{region}
        </if>
        
        <if test="orderColumn != null and orderColumn != ''">
            order by ${orderColumn} desc
        </if>
         )a) where n between #{start} and #{end}
    </select>
  

 <select id="totalRecord" resultType="java.lang.Integer">
  	select count(*) from plan 
        <if test="keyword != null and keyword != ''">
            where (plan_title like '%' || #{keyword} || '%' or (select distinct  k.code  from plan p , korea k where p.korea_code = k.code 
			and k.region like '%' || #{keyword} || '%') = korea_code)
	        <if test="region != null and region != '' and region != 0">
	            AND korea_code = #{region}
	        </if>
        </if>
        <if test="keyword == null or keyword == ''">
	        <if test="region != null and region != '' and region != 0">
	            where korea_code = #{region}
	        </if>
        </if>
  </select>
  
  <select id="likedFindByMemberId" resultType="planVO">
	select p.* from plan p, liked l
	where p.plan_no = l.NO
	and l.type = 'plan' and l.member_id = #{id}
  </select>
  
  <select id="NextNo" resultType="java.lang.Integer">
  	select nvl(max(plan_no), 0) + 1 from plan
  </select>
   
  <update id="insertLiked" parameterType="planVO">
  	update plan set plan_liked = plan_liked + 1 where plan_no = #{plan_no}
  </update>
  
  <update id="deleteLiked" parameterType="planVO">
  	update plan set plan_liked = plan_liked - 1 where plan_no = #{plan_no}
  </update>
   
   <insert id="insertPlan" parameterType="planVO">
	insert into Plan(plan_no, member_id, plan_title, plan_date, plan_start, plan_end, 
	plan_hit, plan_liked, plan_img, korea_code)
	values(#{plan_no}, #{member_id}, #{plan_title}, sysdate, #{plan_start}, #{plan_end}, 
	0, 0, #{plan_img}, #{korea_code})
   </insert>
   
   <update id="updatePlan" parameterType="planVO">
   	update plan set plan_title = #{plan_title}, plan_date = sysdate, plan_start = #{plan_start},
   	plan_end = #{plan_end}, plan_img = #{plan_img}, korea_code = #{korea_code}
   	where plan_no = #{plan_no}
   </update>
   
   <select id="count" resultType="java.lang.Integer">
   	SELECT TO_DATE(#{plan_end}, 'YYYY-MM-DD') - TO_DATE(#{plan_start}, 'YYYY-MM-DD') + 1 FROM dual
   </select>
   
   
    <!--  여행게획 작성 페이지에서 여행지 전체 레코드 수 -->
    <select id="getTotalRecordInInsert" resultType="java.lang.Integer">
        select count(*) from trip
        <if test="region != null and region != '' and region != 0">
            where korea_code = #{region}
        </if>
    </select>
    
    <!-- 여행계획 작성 페이지에서 여행지 목록 -->
    <select id="findAllInInsert" resultType="tripVO">
        select * from (select a.*, rownum n from (select * from trip
        <if test="region != null and region != '' and region != 0 ">
            where korea_code = #{region}
        </if>
        order by trip_no) a) where n between #{start} and #{end}
    </select>
  
  <!-- 여행계획 수정 시 이미 선택한 목록 불러오기 -->
  <select id="findByTripNoInUpdate" resultType="tripVO">
  	select * from trip where trip_no = #{trip_no}
  
  </select>
  <select id="findMyPlanByMemberId" resultType="planVO">
     select * from plan where member_id=#{id}
  </select>

</mapper>